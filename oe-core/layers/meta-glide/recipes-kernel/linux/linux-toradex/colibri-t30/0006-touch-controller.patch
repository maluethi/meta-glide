diff --git a/arch/arm/mach-tegra/board-colibri_t30.c b/arch/arm/mach-tegra/board-colibri_t30.c
index 0c8348de41ad..ae939a7ec751 100644
--- a/arch/arm/mach-tegra/board-colibri_t30.c
+++ b/arch/arm/mach-tegra/board-colibri_t30.c
@@ -763,27 +763,27 @@ static void colibri_t30_gpio_init(void)
  * gpio_request muxes the GPIO function automatically, we only have to make
  * sure input/output muxing is done here...
  */
-static struct fusion_f0710a_init_data colibri_fusion_pdata = {
-	.pinmux_fusion_pins = NULL,
-	.gpio_int = TEGRA_GPIO_PB5, 	/* SO-DIMM 28: Pen down interrupt */
-	.gpio_reset = TEGRA_GPIO_PA6,	/* SO-DIMM 30: Reset interrupt */
-};
-
+//static struct fusion_f0710a_init_data colibri_fusion_pdata = {
+//	.pinmux_fusion_pins = NULL,
+//	.gpio_int = TEGRA_GPIO_PY7, 	/* SO-DIMM 28: Pen down interrupt */
+//	.gpio_reset = TEGRA_GPIO_PB5,	/* SO-DIMM 30: Reset interrupt */
+//};
+//
 /*
  * Atmel touch screen GPIOs (using Toradex display/touch adapter)
  * Aster X3-4, SODIMM pin 107 , pen down interrupt
  * gpio_request muxes the GPIO function automatically, we only have to make
  * sure input/output muxing is done and the GPIO is freed here.
  */
-static struct mxt_platform_data colibri_atmel_pdata = {
-	.suspend_mode = MXT_SUSPEND_T9_CTRL,
-	.irqflags = IRQF_TRIGGER_FALLING,
-#ifdef USE_CAPACITIVE_TOUCH_ADAPTER
-	.gpio_reset = TEGRA_GPIO_PA6,
-#else
-//	.gpio_reset = TEGRA_GPIO_PK4,
-#endif
-};
+static struct mxt_platform_data colibri_atmel_pdata = {
+	.suspend_mode = MXT_SUSPEND_T9_CTRL,
+	.irqflags = IRQF_TRIGGER_FALLING,
+//#ifdef USE_CAPACITIVE_TOUCH_ADAPTER
+	.gpio_reset = TEGRA_GPIO_PA0,
+//#else
+//	.gpio_reset = TEGRA_GPIO_PK4,
+//#endif
+};
 
 /* I2C */
 
@@ -800,22 +800,26 @@ static struct i2c_board_info colibri_t30_i2c_bus1_board_info[] __initdata = {
 	///
 	///
 	///
-
-	{
-		/* TouchRevolution Fusion 7 and 10 multi-touch controller */
-		I2C_BOARD_INFO("fusion_F0710A", 0x10),
-		.platform_data = &colibri_fusion_pdata,
-	},
-	{
-		/* Atmel MAX TS 7 multi-touch controller */
-		I2C_BOARD_INFO("atmel_mxt_ts", 0x4a),
-			.platform_data = &colibri_atmel_pdata,
-#ifdef USE_CAPACITIVE_TOUCH_ADAPTER
-			.irq = TEGRA_GPIO_TO_IRQ( TEGRA_GPIO_PB5 ),
-#else
-			 .irq = TEGRA_GPIO_TO_IRQ( TEGRA_GPIO_PK3 ),
-#endif
-	},
+
+//	{
+//		/* TouchRevolution Fusion 7 and 10 multi-touch controller */
+//		I2C_BOARD_INFO("fusion_F0710A", 0x10),
+//		.platform_data = &colibri_fusion_pdata,
+//	},
+	{
+		/* Atmel MAX TS 7 multi-touch controller */
+		I2C_BOARD_INFO("atmel_mxt_ts", 0x09),
+			.platform_data = &colibri_atmel_pdata,
+//#ifdef USE_CAPACITIVE_TOUCH_ADAPTER
+			.irq = TEGRA_GPIO_TO_IRQ( TEGRA_GPIO_PY7 ),
+//#else
+//			 .irq = TEGRA_GPIO_TO_IRQ( TEGRA_GPIO_PK3 ),
+//#endif
+	},
+//
+//
+//
+//
 };
 
 static struct tegra_i2c_platform_data colibri_t30_i2c1_platform_data = {

